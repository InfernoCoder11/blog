{"version":3,"sources":["webpack:///./src/components/card.js","webpack:///./src/templates/tags.js"],"names":["Card","props","className","to","style","display","flexDirection","height","fluid","image","alignSelf","title","parseDate","date","Tags","pageContext","data","tag","allMdx","edges","totalCount","tagHeader","siteTitle","site","siteMetadata","margin","maxWidth","map","node","key","id","frontmatter","path","thumbnail","childImageSharp","pageQuery"],"mappings":"qHAAA,6DA6BeA,IAxBF,SAAAC,GACX,OACE,+BAAKC,UAAU,iEACb,wBAAC,OAAD,CACEC,GAAIF,EAAME,GACVC,MAAO,CAAEC,QAAS,OAAQC,cAAe,MAAOC,OAAQ,SAExD,wBAAC,IAAD,CAAKL,UAAU,iBAAiBM,MAAOP,EAAMQ,QAC7C,+BACEP,UAAU,YACVE,MAAO,CACLC,QAAS,OACTC,cAAe,SACfI,UAAW,WAGb,8BAAIR,UAAU,4BAA4BD,EAAMU,OAChD,8BAAIT,UAAU,aAAaU,YAAUX,EAAMY,Y,kCCtBrD,uIAkFeC,UAtEF,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,YAAaC,EAAW,EAAXA,KACnBC,EAAQF,EAARE,IAD8B,EAERD,EAAKE,OAA3BC,EAF8B,EAE9BA,MAAOC,EAFuB,EAEvBA,WACTC,EAAeD,EAAN,SACE,IAAfA,EAAmB,GAAK,KADX,iBAEEH,EAFF,IAIf,OACE,gDACE,wBAAC,IAAD,CAAKN,MAAK,SAAWM,IACrB,+BAAKf,UAAU,uBACb,wBAAC,IAAD,CAAQoB,UAAWN,EAAKO,KAAKC,aAAab,QAC1C,+BACET,UAAU,gBACVE,MAAO,CACLqB,OAAO,SACPC,SAAU,MAIZ,+BAAKxB,UAAU,mBACZiB,EAAMQ,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACZ,OACE,wBAAC,IAAD,CACEC,IAAKD,EAAKE,GACV3B,GAAIyB,EAAKG,YAAYC,KACrBrB,MAAOiB,EAAKG,YAAYpB,MACxBF,MAAOmB,EAAKG,YAAYE,UAAUC,gBAAgB1B,MAClDK,KAAMe,EAAKG,YAAYlB,YAMjC,+BAAKX,UAAU,yBACb,kCAAKmB,GACL,wBAAC,OAAD,CAAMlB,GAAG,IAAID,UAAU,QAAvB,QAGA,wBAAC,OAAD,CAAMC,GAAG,SAASD,UAAU,QAA5B,aAIF,wBAAC,IAAD,SA6BD,IAAMiC,EAAS","file":"component---src-templates-tags-js-39cb6977955bbfdfbb5d.js","sourcesContent":["import React from \"react\"\r\nimport { Link } from \"gatsby\"\r\nimport Img from \"gatsby-image\"\r\nimport { parseDate } from \"../helpers\"\r\n\r\nconst Card = props => {\r\n  return (\r\n    <div className=\"card-class border mt-1 mb-1 rounded-lg overflow-hidden shadow\">\r\n      <Link\r\n        to={props.to}\r\n        style={{ display: \"flex\", flexDirection: \"row\", height: \"100%\" }}\r\n      >\r\n        <Img className=\"blog-thumbnail\" fluid={props.image} />\r\n        <div\r\n          className=\"card-text\"\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignSelf: \"center\",\r\n          }}\r\n        >\r\n          <h4 className=\"card-title font-semibold\">{props.title}</h4>\r\n          <h6 className=\"card-date\">{parseDate(props.date)}</h6>\r\n        </div>\r\n      </Link>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Card\r\n","import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport SEO from \"../components/seo\"\r\n\r\n// Components\r\nimport { Link, graphql } from \"gatsby\"\r\nimport Card from \"../components/card\"\r\nimport Header from \"../components/header\"\r\nimport Footer from \"../components/footer\"\r\n\r\nimport \"../css/global.css\"\r\n\r\nconst Tags = ({ pageContext, data }) => {\r\n  const { tag } = pageContext\r\n  const { edges, totalCount } = data.allMdx\r\n  const tagHeader = `${totalCount} post${\r\n    totalCount === 1 ? \"\" : \"s\"\r\n  } tagged with \"${tag}\"`\r\n\r\n  return (\r\n    <>\r\n      <SEO title={`Tag - ${tag}`} />\r\n      <div className=\"tag-blogs-container\">\r\n        <Header siteTitle={data.site.siteMetadata.title} />\r\n        <div\r\n          className=\"container-box\"\r\n          style={{\r\n            margin: `0 auto`,\r\n            maxWidth: 960,\r\n            // padding: `0 1.0875rem 1.45rem`,\r\n          }}\r\n        >\r\n          <div className=\"latestBlogPosts\">\r\n            {edges.map(({ node }) => {\r\n              return (\r\n                <Card\r\n                  key={node.id}\r\n                  to={node.frontmatter.path}\r\n                  title={node.frontmatter.title}\r\n                  image={node.frontmatter.thumbnail.childImageSharp.fluid}\r\n                  date={node.frontmatter.date}\r\n                />\r\n              )\r\n            })}\r\n          </div>\r\n        </div>\r\n        <div className=\"info-nav text-primary\">\r\n          <h1>{tagHeader}</h1>\r\n          <Link to=\"/\" className=\"link\">\r\n            Home\r\n          </Link>\r\n          <Link to=\"/tags/\" className=\"link\">\r\n            All tags\r\n          </Link>\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nTags.propTypes = {\r\n  pageContext: PropTypes.shape({\r\n    tag: PropTypes.string.isRequired,\r\n  }),\r\n  data: PropTypes.shape({\r\n    allMarkdownRemark: PropTypes.shape({\r\n      totalCount: PropTypes.number.isRequired,\r\n      edges: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n          node: PropTypes.shape({\r\n            frontmatter: PropTypes.shape({\r\n              title: PropTypes.string.isRequired,\r\n              slug: PropTypes.string.isRequired,\r\n            }),\r\n          }),\r\n        }).isRequired\r\n      ),\r\n    }),\r\n  }),\r\n}\r\n\r\nexport default Tags\r\n\r\nexport const pageQuery = graphql`\r\n  query($tag: String) {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n    allMdx(\r\n      limit: 2000\r\n      sort: { fields: [frontmatter___date], order: DESC }\r\n      filter: { frontmatter: { tags: { in: [$tag] } } }\r\n    ) {\r\n      totalCount\r\n      edges {\r\n        node {\r\n          id\r\n          frontmatter {\r\n            path\r\n            title\r\n            date\r\n            thumbnail {\r\n              childImageSharp {\r\n                fluid(maxWidth: 250, quality: 80) {\r\n                  ...GatsbyImageSharpFluid\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"sourceRoot":""}