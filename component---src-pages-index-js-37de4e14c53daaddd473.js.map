{"version":3,"sources":["webpack:///./src/components/layout.js","webpack:///./src/components/card.js","webpack:///./src/pages/index.js"],"names":["Layout","children","data","id","className","siteTitle","site","siteMetadata","title","style","margin","maxWidth","Card","props","to","display","flexDirection","height","fluid","image","alignSelf","parseDate","date","pageQuery","IndexPage","allMdx","edges","map","post","key","node","frontmatter","path","thumbnail","childImageSharp"],"mappings":"qNAoDeA,IAnCA,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACVC,EAAI,OAUV,OACE,gDACE,+BAAKC,GAAG,iBAAiBC,UAAU,8BACjC,wBAAC,IAAD,CAAQC,UAAWH,EAAKI,KAAKC,aAAaC,QAC1C,+BACEJ,UAAU,gBACVK,MAAO,CACLC,OAAO,SACPC,SAAU,MAIZ,oCAAOV,IAET,wBAAC,IAAD,U,2IC1CR,6DA6BeW,IAxBF,SAAAC,GACX,OACE,+BAAKT,UAAU,iEACb,wBAAC,OAAD,CACEU,GAAID,EAAMC,GACVL,MAAO,CAAEM,QAAS,OAAQC,cAAe,MAAOC,OAAQ,SAExD,wBAAC,IAAD,CAAKb,UAAU,iBAAiBc,MAAOL,EAAMM,QAC7C,+BACEf,UAAU,YACVK,MAAO,CACLM,QAAS,OACTC,cAAe,SACfI,UAAW,WAGb,8BAAIhB,UAAU,4BAA4BS,EAAML,OAChD,8BAAIJ,UAAU,aAAaiB,YAAUR,EAAMS,Y,kCCtBrD,iHA6BaC,EAAS,aA4BPC,UAlDG,SAAC,GAAD,IAAGtB,EAAH,EAAGA,KAAH,OAChB,wBAAC,IAAD,KACE,wBAAC,IAAD,CAAKM,MAAM,SACX,+BAAKJ,UAAU,mBACZF,EAAKuB,OAAOC,MAAMC,KAAI,SAAAC,GAAI,OACzB,wBAAC,IAAD,CACEC,IAAKD,EAAKE,KAAK3B,GACfW,GAAIc,EAAKE,KAAKC,YAAYC,KAC1BxB,MAAOoB,EAAKE,KAAKC,YAAYvB,MAC7BW,MAAOS,EAAKE,KAAKC,YAAYE,UAAUC,gBAAgBhB,MACvDI,KAAMM,EAAKE,KAAKC,YAAYT,WAIlC,+BAAKlB,UAAU,yBACb,wBAAC,OAAD,CAAMU,GAAG,QAAQV,UAAU,QAA3B","file":"component---src-pages-index-js-37de4e14c53daaddd473.js","sourcesContent":["/**\r\n * Layout component that queries for data\r\n * with Gatsby's useStaticQuery component\r\n *\r\n * See: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\r\n\r\nimport React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nimport Header from \"./header\"\r\nimport Footer from \"./footer\"\r\n//import \"./layout.css\"\r\nimport \"typeface-inter\"\r\nimport \"../css/global.css\"\r\n\r\nconst Layout = ({ children }) => {\r\n  const data = useStaticQuery(graphql`\r\n    query SiteTitleQuery {\r\n      site {\r\n        siteMetadata {\r\n          title\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  return (\r\n    <>\r\n      <div id=\"site-container\" className=\"site-container antialiased\">\r\n        <Header siteTitle={data.site.siteMetadata.title} />\r\n        <div\r\n          className=\"container-box\"\r\n          style={{\r\n            margin: `0 auto`,\r\n            maxWidth: 960,\r\n            // padding: `0 1.0875rem 1.45rem`,\r\n          }}\r\n        >\r\n          <main>{children}</main>\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n}\r\n\r\nexport default Layout\r\n","import React from \"react\"\r\nimport { Link } from \"gatsby\"\r\nimport Img from \"gatsby-image\"\r\nimport { parseDate } from \"../helpers\"\r\n\r\nconst Card = props => {\r\n  return (\r\n    <div className=\"card-class border mt-1 mb-1 rounded-lg overflow-hidden shadow\">\r\n      <Link\r\n        to={props.to}\r\n        style={{ display: \"flex\", flexDirection: \"row\", height: \"100%\" }}\r\n      >\r\n        <Img className=\"blog-thumbnail\" fluid={props.image} />\r\n        <div\r\n          className=\"card-text\"\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignSelf: \"center\",\r\n          }}\r\n        >\r\n          <h4 className=\"card-title font-semibold\">{props.title}</h4>\r\n          <h6 className=\"card-date\">{parseDate(props.date)}</h6>\r\n        </div>\r\n      </Link>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Card\r\n","import React from \"react\"\r\nimport Layout from \"../components/layout\"\r\n//import Image from \"../components/image\"\r\nimport SEO from \"../components/seo\"\r\nimport { Link, graphql } from \"gatsby\"\r\nimport Card from \"../components/card\"\r\n\r\nconst IndexPage = ({ data }) => (\r\n  <Layout>\r\n    <SEO title=\"Home\" />\r\n    <div className=\"latestBlogPosts\">\r\n      {data.allMdx.edges.map(post => (\r\n        <Card\r\n          key={post.node.id}\r\n          to={post.node.frontmatter.path}\r\n          title={post.node.frontmatter.title}\r\n          image={post.node.frontmatter.thumbnail.childImageSharp.fluid}\r\n          date={post.node.frontmatter.date}\r\n        />\r\n      ))}\r\n    </div>\r\n    <div className=\"info-nav text-primary\">\r\n      <Link to=\"/tags\" className=\"link\">\r\n        All tags\r\n      </Link>\r\n    </div>\r\n  </Layout>\r\n)\r\n\r\nexport const pageQuery = graphql`\r\n  query IndexQuery {\r\n    allMdx(\r\n      limit: 10\r\n      filter: { frontmatter: { published: { eq: true } } }\r\n      sort: { fields: [frontmatter___date], order: DESC }\r\n    ) {\r\n      edges {\r\n        node {\r\n          id\r\n          frontmatter {\r\n            path\r\n            title\r\n            date\r\n            thumbnail {\r\n              childImageSharp {\r\n                fluid(maxWidth: 250, quality: 80) {\r\n                  ...GatsbyImageSharpFluid\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport default IndexPage\r\n"],"sourceRoot":""}