{"version":3,"sources":["webpack:///./src/pages/tags.js"],"names":["TagsPage","data","group","allMdx","title","site","siteMetadata","siteTitle","className","map","tag","to","fieldValue","key","pageQuery"],"mappings":"oHAAA,oIA8DeA,UAnDE,SAAC,GAAD,QACfC,KACYC,EAFG,EAEbC,OAAUD,MAEQE,EAJL,EAGbC,KACEC,aAAgBF,MAJL,OAQf,6BACE,kBAAC,IAAD,CAAKA,MAAM,SACX,6BACE,kBAAC,IAAD,CAAQG,UAAWH,IACnB,yBAAKI,UAAU,kBACb,wBAAIA,UAAU,aACXN,EAAMO,KAAI,SAAAC,GAAG,OACZ,kBAAC,OAAD,CACEC,GAAE,SAAWD,EAAIE,WAAf,IACFC,IAAKH,EAAIE,WACTJ,UAAU,wBAETE,EAAIE,gBAIX,yBAAKJ,UAAU,4BACb,kBAAC,OAAD,CAAMG,GAAG,IAAIH,UAAU,QAAvB,SAIF,kBAAC,IAAD,UAuBD,IAAMM,EAAS","file":"component---src-pages-tags-js-57c6faa209de34a48530.js","sourcesContent":["import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\n// Utilities\r\n// import kebabCase from \"lodash/kebabCase\"\r\n// Components\r\nimport SEO from \"../components/seo\"\r\nimport { Link, graphql } from \"gatsby\"\r\nimport Header from \"../components/header\"\r\nimport Footer from \"../components/footer\"\r\nimport \"../css/global.css\"\r\n\r\nconst TagsPage = ({\r\n  data: {\r\n    allMdx: { group },\r\n    site: {\r\n      siteMetadata: { title },\r\n    },\r\n  },\r\n}) => (\r\n  <div>\r\n    <SEO title=\"Tags\" />\r\n    <div>\r\n      <Header siteTitle={title} />\r\n      <div className=\"tags-container\">\r\n        <ul className=\"tags-list\">\r\n          {group.map(tag => (\r\n            <Link\r\n              to={`/tags/${tag.fieldValue}/`}\r\n              key={tag.fieldValue}\r\n              className=\"tag rounded-full p-1\"\r\n            >\r\n              {tag.fieldValue}\r\n            </Link>\r\n          ))}\r\n        </ul>\r\n        <div className=\"info-nav padding-top-6px\">\r\n          <Link to=\"/\" className=\"link\">\r\n            Home\r\n          </Link>\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n    </div>\r\n  </div>\r\n)\r\nTagsPage.propTypes = {\r\n  data: PropTypes.shape({\r\n    allMdx: PropTypes.shape({\r\n      group: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n          fieldValue: PropTypes.string.isRequired,\r\n          totalCount: PropTypes.number.isRequired,\r\n        }).isRequired\r\n      ),\r\n    }),\r\n    site: PropTypes.shape({\r\n      siteMetadata: PropTypes.shape({\r\n        title: PropTypes.string.isRequired,\r\n      }),\r\n    }),\r\n  }),\r\n}\r\nexport default TagsPage\r\nexport const pageQuery = graphql`\r\n  query {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n    allMdx(limit: 2000, filter: { frontmatter: { published: { eq: true } } }) {\r\n      group(field: frontmatter___tags) {\r\n        fieldValue\r\n        totalCount\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"sourceRoot":""}