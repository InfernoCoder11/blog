{"version":3,"sources":["webpack:///./src/pages/dark-mode/index.mdx"],"names":["_frontmatter","layoutProps","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"mQAKO,IAAMA,EAAe,CAC1B,KAAQ,oBACR,MAAS,4CACT,WAAa,EACb,KAAQ,aACR,cAAiB,8BACjB,UAAa,qCAQTC,EAAc,CAClBD,gBAGa,SAASE,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,cALS,UAKT,iBAAeH,EAAiBG,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAC5E,uDACA,qOAEA,0TAGA,0EACA,6FACA,yBAAK,oCAAMC,WAAW,OAAU,CAC5B,UAAa,iBADZ,4LAWL,6DAA0C,4BAAYA,WAAW,KAAvB,aAA1C,KACA,yBAAK,oCAAMA,WAAW,OAAU,CAC5B,UAAa,iBADZ,iMAWL,gGACA,yBAAK,oCAAMA,WAAW,OAAU,CAC5B,UAAa,iBADZ,8RAcL,yEAAsD,4BAAYA,WAAW,KAAvB,aAAtD,8KAEA,8GAA2F,4BAAYA,WAAW,KAAvB,aAA3F,mBAAoK,4BAAYA,WAAW,KAAvB,QAApK,OAA4N,4BAAYA,WAAW,KAAvB,QAA5N,wBAEA,4GAAyF,4BAAYA,WAAW,KAAvB,aAAzF,uIAEA,yBAAK,oCAAMA,WAAW,OAAU,CAC5B,UAAa,wBADZ,mOAWL,+QAEA,6EACA,uCACA,wWAGF,iCAAGA,WAAW,KAAQ,CAChB,KAAQ,mEACP,4BAAYA,WAAW,KAAvB,gCALL,KAMA,uDACA,mHACF,iCAAGA,WAAW,KAAQ,CAChB,KAAQ,wDADd,QADE,yCAIF,iCAAGA,WAAW,KAAQ,CAChB,KAAQ,iFACP,4BAAYA,WAAW,KAAvB,yBANL,oFAQA,8HACA,kHACF,iCAAGA,WAAW,KAAQ,CAChB,KAAQ,oDADd,qBADE,MAQJJ,EAAWK,gBAAiB","file":"component---src-pages-dark-mode-index-mdx-056d098f818df85c0c74.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"path\": \"/dark-mode-toggle\",\n  \"title\": \"How I added a dark mode toggle in my blog\",\n  \"published\": true,\n  \"date\": \"2020-05-16\",\n  \"featuredImage\": \"../../images/light-dark.jpg\",\n  \"thumbnail\": \"../../images/light-dark-thumb.jpg\"\n};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h2>{`Why add a dark mode toggle?`}</h2>\n    <p>{`Having a dark mode toggle is really important nowadays. It's pleasing to the eye and almost a necessity in dark environments. So, I made\nit one of the first features to be implemented in this website. `}</p>\n    <p>{`Though adding it was pretty straightforward (thanks to CSS variables!), it took quite some time as I had to edit and add a lot of styles in\nCSS. If you're considering adding a dark mode to your website, I'd suggest you to do it early on. That way there should be less sytles\nto change.`}</p>\n    <h2>{`Implementation (Get ready for a lot of CSS üòÅ)`}</h2>\n    <p>{`First of all, l globally declared all my light mode colors in CSS,`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-css\"\n      }}>{`:root {\n  --clr-primary: #ffffff;\n  --clr-secondary: #f7fafc;\n  --clr-border: #dde0e2;\n  --text-primary: #000000;\n  --text-secondary: #4a5568;\n  --header-bg-color: #663399;\n}\n`}</code></pre>\n    <p>{`and my dark mode colors in a class `}<inlineCode parentName=\"p\">{`dark-mode`}</inlineCode>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-css\"\n      }}>{`.dark-mode {\n  --clr-primary: #333333;\n  --clr-secondary: #212121;\n  --clr-border: #000000;\n  --text-primary: #ffffff;\n  --text-secondary: #e2e8f0;\n  --header-bg-color: #333333;\n}\n`}</code></pre>\n    <p>{`Then, I configured my CSS styles to use these variables. For example:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-css\"\n      }}>{`.site-header {\n  grid-area: header;\n  justify-self: stretch;\n  align-self: stretch;\n  background: var(--header-bg-color); // 1\n  border-color: var(--clr-border); // 2\n}\n.card-class {\n  background-color: var(--clr-primary); // 3\n  border-color: var(--clr-border); // 4\n}\n`}</code></pre>\n    <p>{`What's going to happen is that when a class of `}<inlineCode parentName=\"p\">{`dark-mode`}</inlineCode>{` is set to any element, the dark-mode colors override the default colors\n(only for elements inside it!). When the class is removed, the default colors get back in place.`}</p>\n    <p>{`You can try it out yourself by opening dev tools and adding (or removing) the class `}<inlineCode parentName=\"p\">{`dark-mode`}</inlineCode>{` to an element (`}<inlineCode parentName=\"p\">{`html`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`body`}</inlineCode>{` for full\neffect!).`}</p>\n    <p>{`Next, I hooked up a button (in the header) with a JS function to toggle the class `}<inlineCode parentName=\"p\">{`dark-mode`}</inlineCode>{` on the body element when clicked.\nTo remember the state of the theme (light or dark), I stored a key value pair in local storage.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`export function toggleDarkMode() {\n  const body = document.body\n  if (body.classList.toggle(\"dark-mode\")) {\n    localStorage.setItem(\"dark-mode\", true)\n  } else {\n    localStorage.setItem(\"dark-mode\", false)\n  }\n}\n`}</code></pre>\n    <p>{`The button toggles the theme, everything displays fine in both the modes and user-preference is remembered in local storage.\nHowever, I haven't given any code which checks local storage on page load and sets the theme to the user's preference.`}</p>\n    <p>{`I did just that initially, but ran into a problem.`}</p>\n    <h3>{`The Problem`}</h3>\n    <p>{`If the user's preference was set to dark mode, then on page reload (or on a later visit), the light theme would show for a fraction of a\nsecond before turning dark. Basically equivalent to a white flash. Though a minor issue, it was quite annoying. While searching online\nfor a fix, I stumbled upon an awesome Gatsby plugin called\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://www.gatsbyjs.org/packages/gatsby-plugin-use-dark-mode/\"\n      }}><inlineCode parentName=\"a\">{`gatsby-plugin-use-dark-mode`}</inlineCode></a>{`.`}</p>\n    <h2>{`Gatsby Plugin Use Dark Mode`}</h2>\n    <p>{`This plugin prevents the flash of the default theme. You can find out how it works over\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/donavon/use-dark-mode#that-flash\"\n      }}>{`here`}</a>{`. To top it off, it also queries the\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://developer.mozilla.org/en-US/docs/Web/CSS/@media/prefers-color-scheme\"\n      }}><inlineCode parentName=\"a\">{`prefers-color-scheme`}</inlineCode></a>{` media query on page load\nand applies the user's preferred theme automatically!`}</p>\n    <p>{` A really nifty plugin to have! Especially after spending long hours setting up a dark mode toggle.`}</p>\n    <p>{` You can find the full source code for this dark mode implementation at this project's\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/InfernoCoder11/personal-blog\"\n      }}>{`github repository`}</a>{`.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}